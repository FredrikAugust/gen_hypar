-module(hypar_connect_sup).

-behaviour(supervisor).

%% API
-export([start_link/0]).

%% Supervisor callbacks
-export([init/1]).

-define(SERVER, ?MODULE).

%%%===================================================================
%%% API functions
%%%===================================================================

start_link() ->
    supervisor:start_link({local, ?SERVER}, ?MODULE, []).

%%%===================================================================
%%% Supervisor callbacks
%%%===================================================================

init([]) ->
    ConnectionWorkers = {hypar_connect,
                         {hypar_connect, start_link
                         {ok, {SupFlags, [AChild]}}.

%%%===================================================================
%%% Internal functions
%%%===================================================================

%% TODO
%% Automatically find out which nic to bind to. As for now it's needed to be configured.

%% @doc Try to find local ip-address.
%%      Start by trying to find a wired ("ethX") then try wlan fallback to loopback.
get_ip_addr() -> undefined.

%% @doc Predicate to filter out all wired nic's
is_wired(Ifname) -> lists:prefix("eth", Ifname).

%% @doc Predicate to filter out all wireless nic's
is_wireless(Ifname) -> lists:prefix("wlan", Ifname).
